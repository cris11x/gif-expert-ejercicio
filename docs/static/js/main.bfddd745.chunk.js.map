{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifts","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAmB9C,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAOlB,SACI,uBACIO,KAAM,OACNC,MAAUT,EACVU,SApBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,+BCRnBG,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEdC,EAFc,iDAEmCC,UAAUH,GAF7C,+DAGDI,MAAOF,GAHN,cAGdG,EAHc,gBAIGA,EAAKC,OAJR,uBAIZC,EAJY,EAIZA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVtB,kBAcbM,GAda,4CAAH,sDCCRO,EAAc,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGrC,OADAc,QAAQC,IAAI,CAACN,KAAIC,QAAOV,QAEpB,sBAAKgB,UAAY,yCAAjB,UACI,qBAAKC,IAAQjB,EAAMkB,IAAMR,IACzB,4BAAKA,QCJJS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECDZ,SAAEA,GAAe,IAAD,EAEfd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAJ4B,mBAElCC,EAFkC,KAE3BC,EAF2B,KAsBzC,OAfAC,qBAAW,WAEP1B,EAAUC,GACL0B,MAAM,SAAAC,GAEHH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAKtB,CAACtB,IAGGuB,EDnB0BK,CAAe5B,GAAnCa,EAFwB,EAE7BN,KAAae,EAFgB,EAEhBA,QAErB,OACI,qCACI,oBAAIJ,UAAY,oCAAhB,SAAsDlB,IAEpDsB,GAAW,mBAAGJ,UAAY,mCAAf,yBAEb,qBAAKA,UAAU,YAAf,SAEQL,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADGA,EAAIC,aEd3BkB,EAAe,WAAO,IAAD,EAEM3C,mBAAS,CAAC,cAFhB,mBAEvB4C,EAFuB,KAEX7C,EAFW,KAI9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAEA,6BAEQ6C,EAAWrB,KAAK,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEKA,SAAWA,GADLA,Y,MCZlC+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bfddd745.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\n\nexport const AddCategory = ({ setcategories }) => {\n\n    const [inputValue, setinputValue] = useState('');\n\n    const handleInputChange = ( e ) => {\n        setinputValue( e.target.value );\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if ( inputValue.trim().length > 2 ){\n            setcategories( cats => [ inputValue, ...cats ]);\n            setinputValue('');\n        }\n\n\n    }\n\n    return (\n        <form onSubmit = { handleSubmit }>\n            <input\n                type =\"text\"\n                value = { inputValue }\n                onChange= { handleInputChange }\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setcategories: PropTypes.func.isRequired \n}\n","\nexport const getGifts = async( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=puvheGF2U8EIXwmjP4iZbwsoqUj0d9cH`;\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({ id, title, url }) => {\n\n    console.log({id, title, url});\n    return (\n        <div className = \"card animate__animated animate__fadeIn\">\n            <img src = { url } alt={ title } />\n            <p>{ title }</p>\n            \n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifts } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const { data:images, loading } = useFetchGifts( category );\n\n    return (\n        <>\n            <h3 className = \"animate__animated animate__fadeIn\">{ category }</h3>\n\n            { loading && <p className = \"animate__animated animate__flash\">Loading ...</p> }\n\n            <div className=\"card-grid\">\n                {\n                    images.map( img => (\n                        <GifGridItem\n                            key = { img.id }\n                            { ...img } \n                        />\n                    )) \n                }\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifts } from \"../helpers/getGifs\";\n\nexport const useFetchGifts = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n\n        getGifts( category )\n            .then( imgs => {\n\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n                \n            })\n\n    }, [category])\n\n\n    return state; // { data:[], loading: true }\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [categories, setcategories] = useState(['One Punch']);\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setcategories = { setcategories } />\n            <hr />\n\n            <ol>\n                {\n                    categories.map( category => (\n                       <GifGrid\n                            key={ category }\n                            category={ category }\n                        /> \n                    ))\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}